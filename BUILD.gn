# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/lite/config/component/lite_component.gni")

#if (ohos_kernel_type == "liteos_a" || ohos_kernel_type == "linux") {
config("objectStore_config") {
  ldflags = [
    "-lstdc++",
    "-fPIC",
    "-D_FORTIFY_SOURCE=2",
  ]
}

static_library("objectstoremgr") {
  configs -= [ "//build/lite/config:language_cpp" ]
  cflags = [ "-fPIC" ]
  cflags_cc = cflags
  cflags_cc += [ "-std=c++17" ]
  configs += [ ":objectStore_config" ]

  include_dirs = [
    "frameworks/include",
    "frameworks/src/storage",
    "frameworks/include/common",
    "frameworks/include/coordinator",
    "frameworks/include/coordinator/include",
    "frameworks/include/coordinator/message",
    "frameworks/include/communicator",
    "frameworks/include/object",
    "interfaces/innerkits",
    "//third_party/bounds_checking_function/include",
    "//foundation/communication/dsoftbus/interfaces/kits/bus_center",
    "//foundation/communication/dsoftbus/interfaces/kits/transport",
    "//foundation/communication/dsoftbus/interfaces/kits/common",

    #"//foundation/communication/dsoftbus/core/common/include",
  ]

  sources = [
    "frameworks/include/coordinator/operation.h",
    "frameworks/src/common/object_utils.cpp",
    "frameworks/src/common/thread_pool.cpp",
    "frameworks/src/communicator/communicator.cpp",
    "frameworks/src/communicator/communicator_softbus_adapter.cpp",
    "frameworks/src/communicator/network.cpp",
    "frameworks/src/communicator/network_manager.cpp",
    "frameworks/src/communicator/rpc_network.cpp",
    "frameworks/src/communicator/rpc_session.cpp",
    "frameworks/src/coordinator/coordinate_engine.cpp",
    "frameworks/src/coordinator/local_object_task.cpp",
    "frameworks/src/coordinator/local_observers.cpp",
    "frameworks/src/coordinator/message_decoder.cpp",
    "frameworks/src/coordinator/object_task_manager.cpp",
    "frameworks/src/coordinator/observer_manager.cpp",
    "frameworks/src/coordinator/operation.cpp",
    "frameworks/src/coordinator/operation_dispatcher.cpp",
    "frameworks/src/coordinator/remote_object_task.cpp",
    "frameworks/src/coordinator/remote_observers.cpp",
    "frameworks/src/object/distributed_object_impl.cpp",
    "frameworks/src/object/distributed_object_store_impl.cpp",
    "frameworks/src/object/distributed_objectstore_manager.cpp",
    "frameworks/src/object/distributed_objectstore_manager_impl.cpp",
    "frameworks/src/object/flat_object.cpp",
    "frameworks/src/object/flat_object_store.cpp",
    "frameworks/src/object/object_coordinator.cpp",
    "frameworks/src/object/object_store_executor.cpp",
    "frameworks/src/object/object_store_manager.cpp",
    "frameworks/src/storage/flat_object_storage_engine.cpp",
  ]

  deps = [
    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
    "//foundation/distributeddatamgr/distributeddatamgr/services/distributeddataservice/libs/distributeddb:distributeddb"
   ]
  public_deps = [
    "//foundation/communication/dsoftbus/sdk:softbus_client",
    "//foundation/distributedschedule/samgr_lite/samgr:samgr",
    "//third_party/bounds_checking_function:libsec_shared",
  ]
}

static_library("objectstore_sdk") {
  include_dirs = [ "interfaces/innerkits" ]
  deps = [ "//foundation/distributeddatamgr/objectstore:objectstoremgr" ]
}
#}
